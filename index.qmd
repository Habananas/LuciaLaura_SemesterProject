---
title: A Travel Mode Detection approach based on hierarchical and non hierarchical clustering
subtitle: Patterns and Trends in Environmental Data
author: Lucia Scheele and Laura Vetter
format:
  html:
    code-fold: true # makes the code in the output collapsable
execute:
  warning: false # hides warnings from the generated output
  message: false        # hides messages from the generated output
lang: en  # switch to "de" if you write your report in german
bibliography: bibliography.bib
---

```{r}
#| code-summary: preprocessing #name des Code Chunks

load("my_environment.rdata")
#load("selected_tracks.rda") (besser weil man dann nur lädt was man wirklich braucht)

#install.packages("pacman") 
#library("pacman")
#p_install_gh("benmarwick/wordcountaddin")
#wordcountaddin::word_count("index.qmd") 
library(tmap) #to show data in map viewer, is necesary in 


``` 
knitr::spin("preprocessing.R") --> macht "run" von preprocessing file und produziert html. 

Fragen:
- wie preproces und index file zu gemeinsamen html?
- die infinity values wurden jetzt zu 1 transformiert. Macht das am meisten Sinn? Begründung
- scale/normalisation. Warum normalisieren wir die Werte? Gibt es Nachteile bei einer Normalisierung(look up dengler?)?
- spatial proximity: is dependency of data a disadvantage for clustering? (Lucia)
- dist matrix. Was ist das (Laura)?
-CHECK k means n start - mitreinnehmen warum? (Laura) 
- can we extract the parameters by which hmeans clusters? für Vergleich am Ende (wsl nicht)( Laura)
- CHECK Validation with manual clustering (by Speed (laura) 
- or assigning movement type in GIS (Lucia)
- was haben wir nochmal mit den Randpunkten gemacht? Also wenns von einem track zum nächsten geht? haben wor dafür eine Function oder so damit die speeds etc nicht verfälscht sind?
- first clustering with only one track & verification with CHi/ANOVA and then with various & verification. -> this tells us wether method is generalizable or not? 
- wir wollen wissen, ob alle punkte, die im GIS cluster den wert 5 haben, im k-cluster den entsprechenden Wert zB 3 haben. Mit welcher verification method? 

zu Bearbeiten:
- turning angles function? 

Papers to read: 
- Izakian (2020) trajectory segmentation approach (in BIB)


## Abstract

This project aims to analyze travel behaviour and clustering of travel segments by different clustering methods and visual analysis. 
Data was collected for 3 trajectories with different travel modes within the trajectories. Followingly, the travel modes were determined by visual analysis using parameters like speed, ... Followingly, kmeans and hmeans clustering were applied to the datasets in order to define the travelm modes.
Verification took place using t-test and ANOVA. 
The results show that 
...
- k means was able to identify 5 clusters, which corresponds to the actual amount of travel modes
- the ward method in hmeans is better than ...
- xxx showed a better (or equally good) result than manual classification. 
- ... Verification method 

## Introduction

In order to understand travel behaviour, it is critical to analyze movement data and be able to classify different types of movement correctly (Sadeghian et al. 2020). 
@laube2011 investigate how temporal scale affects the calculation of movement parameters (speed, sinuosity and turning angle) of animal trajectories. 
leading to the research question of which travel modes can be differentiated in a collection of trajectories using  k-means clustering?

## Material and Methods

### Data
The data sample consists of movement data collected with the Tracking
App Strava, by two individuals over a timespan of April - May 2024.
Overall, 31 trips of different travel modes were recorded with the movement types walking, running, cycling, bus, tram, train and car. For simplification of the  design and to be able to focus on the application of k-means, a sample of 5 trips will be selected to be analyzed.
Data points were recorded every second, resulting in a relatively high resolution of data. However, data frequency is not consistent in all cases due to lack of signal (e.g. in a train). 

At first, it was considered to include contextual data such as traffic infrastructure data by the city of Zurich (
[https://www.stadt-zuerich.ch/geodaten/](#0){.uri}), however these are ordinal data and are therefore not suitable for the normal k-means algorithm. 
(Discussion: If more time & resources, other clustering method that also allows ordinal/categorical variables to be considered)
BEARBEITEN

### Clustering 

Some of the trajectories include several travel modes. The aim of this project is to verify if it is possible to detect different travel modes within one trajectory using clustering. 
To determine the number of clusters needed, the trajectory data is analysed with   (functions).  
5 different travel modes could be identified in the samples (walking, running, tram, bike, train), therefore the optimal number of clusters expected is 5. 
Space and time of trajectories were treated to be relative and are filtered out for the analysis.
The parameters for clustering will be calculated from the given geographical data and include:
- distance point1 - point2
- speed p1 - p2
- acceleration p1 - p2
- mean speed in moving window 
- max speed in moving window
- mean acceleration in moving window 
- max acceleration in moving window
- elevation change in moving window 
- sinuosity in moving window

(other experimental stuff like azimuth, direction, turn? how to do that?)

Difficulties sinuosity Berechnung: bei der Berechnung haben einige Punkte einen Wert von Inf. Das kommt daher, dass der Nenner (die direkte distanz) = 0 ist, d.h. am Anfangs und Endpunkt des Moving windows wurde die Position nicht verändert. Die tatsächlich gelaufene Distanz hat aber einen Wert>1, da innerhalb der 10 Punkte eine Bewegung stattgefunden hat. Daher ergibt sich der Wert tatsächlich/direkt= x/0= Inf. 
Es gibt mehrere Möglichkeiten mit diesem Problem umzugehen: 
1) Inf Werte auf den Maximalwert der Sinuosity setzen (Lucia)
2) Werte komplett aus der Tabelle rausfiltern
3) den tatsächlich gelaufenen Weg pro 10 Punkte einsetzen, dann ist   tatsächlich/direkt=x/x=1 (haben wir gemacht)


#### manual clustering 
Here, we encountered two problems: 
a) the stops (this can be resolved with the step mean and static function, which is then assigned as an extra category)
b) inhomogenous segments, bc the threshold is set at a point where it varies constantly (e.g. speed>5 = running, speed<5 = walking - differs constantly )

```{r}


tmap_mode("view")
tm_shape(selected_tracks)+ 
  tm_dots(col = "trajID", palette = "Paired")

tmap_mode("view")

cluster_manual_map <- tm_shape(selected_tracks)+ 
  tm_dots(col = "manual_cluster", palette = "RdYlGn")+
  tm_view(set.view = c(8.524527, 47.390118,  16))


cluster_smoothed_map <- tm_shape(selected_tracks)+ 
  tm_dots(col = "transformed_values", palette = "RdYlGn")+
tm_view(set.view = c(8.524527, 47.390118,  16))

cluster_k_map <- tm_shape(selected_tracks_na_omit)+ 
  tm_dots(col = "kmeans5", palette = "RdYlGn")+
  tm_view(set.view = c(8.524527, 47.390118,  16))


tmap_arrange(cluster_smoothed_map, cluster_manual_map,cluster_k_map )

```


#### kmeans

Initially, it was planned to use a k-means algorithm  that takes categorical variables into account (such as infrastructure data), however this was not possible with the k-mode() function and the xxx package was not supported by the R-version. 
_> 2hy didnt we do it with klar? doesnt work?

"Das gewählte Distanzmass und der Modus für die sukzessive Fusion von Clustern haben einen grossen Einfluss auf das Endergebnis."(Dengler)
-> haben wir das bedacht (Laura)?

#### hmeans


chaining erklären (deshlab ward am besten)

### Verification with manual classification

The quality of this analysis is then  assessed by visual analysis and comparison with GIS data. 
Predictive Validation, accuracy, precision, recall, F1 Score, Confusion Matrix..

```{r}
#ergebnis von chi square
```

## Results

x tracks were chosen which include several travel modes. 

```{r}
tmap_mode("view")
tm_shape(selected_tracks)+ 
  tm_dots(col = "trajID", palette = "Paired") +
  tm_view(set.view = c(8.524527, 47.390118,  16))

```
### parameters

```{r}
tm_shape(selected_tracks)+
  tm_dots(col = "speed_kmh", palette = "RdYlGn") 

tm_shape(selected_tracks)+
  tm_dots(col = "el_change", palette = "RdYlGn") 


tm_shape(selected_tracks)+
  tm_dots(col = "manual_cluster", palette = "RdYlGn",
          n =3 ,
          breaks = seq(1, 3, by = 0.1)) 
```

### k means  (non hierarchical clustering)

#### partitioning 
There are severeal methods to define the appropriate amount of clusters for kmeans, one of them being the elbow method (https://www.datanovia.com/en/lessons/determining-the-optimal-number-of-clusters-3-must-know-methods/#elbow-method) and anotherone the Gap Statistic Method. 
Using the fviz_nbclust() function from the factoextra package, the right amount of clusters was identified. 

```{r}
plot_k_elbow

```
In the elbow statistic, the best amount of clusters seems to be 2(???), as the curve starts to bend there.  

```{r}
#plot_k_gapstat #processing takes very long... therefore left out
```
We tried gapstat, but it took to long  to calculate. 
Another method is the cascade (SOURCE LUCIA).
The SSE (sum of squared errors) is a measure of how well the data points are summarized within the clusters. The lower, the better the clustering. In the ssi (silhouette index) the higher the value (from -1 to 1) the better the clustering.
```{r}
cascade_results
```
The SSE is lowest for 5 clusters, which indicates good clustering, and also the ssi is highest in 5 clusters. 
Therefore, we try k means with 4 and 5 clusters. 

#### applying k means 
We left out the n start criterion -> but would have liked to bring in if more time, as running k-means multiple times with different random starts (specified by the nstart parameter) and choosing the best result helps avoid getting stuck in a poor local optimum. 
```{r}
tm_shape(selected_tracks_na_omit)+
  tm_dots(col = "kmeans4", palette = "RdYlGn") 
```
das cluster klappt noch ziemlich schlecht, es clustert zB die standing points gleich wie das laufen. 
Und Strassenbahn und Fahrrad sind ebenfalls gleich

Changing the cluster number to 5:
```{r}
tm_shape(selected_tracks_na_omit)+
  tm_dots(col = "kmeans5", palette = "RdYlGn") 

```
Und auch Kurven mit dem Fahrrad sieht es nicht als solche, sondern klassifiziert sie anders. 

###  hmeans (hierarchical  clustering)
meaning that e.g. cluster bike is closer to running and tram is closer to train 

```{r}
ward_plot
ward_dendro 
```

```{r}
P_ward_4
```
Works well with differentiation between running and walking, but nbike and tram look the same. 
### Verification
Kontrollgruppe (GIS)  und Clustergruppen 
H0: Die Gruppenzuordnungen (Cluster) sind gleich bei Kontroll und Clustergruppen
H1: Die Gruppenzuordnungen (Cluster) sind ungleich bei Kontroll und Clustergruppen


#### t test - eher CHi2 test? da

#### ANOVA 

#### t test mit rID Segmentierung 

Erwartetes Ergebnis: der p Wert ist höher, d.h. unsignifikanter als bei t-test ohne rID segmentierung, das heisst die Gruppenzuweisungen sind sich mit rID segmentierung ähnlicher.



## Discussion

- change of results when sinuosity inf values different?

Clustering with single tracks works better than when clustering with all tracks -> method less accurate when using fixes of several trajectories? not generally applicable (reproducible)?


## Appendix

### Wordcount

<!-- after installing the wordcountaddin, remove the line "#| eval: false" -->




install.packages("wordcountaddin")
library("wordcountaddin")
#wordcountaddin::word_count("index.qmd")


# Datei einlesen
text <- readLines("index.qmd", warn = FALSE)

# Text in einen einzigen String konvertieren
text <- paste(text, collapse = " ")
char_count <- nchar(text)

print(char_count)
# Wörter zählen
word_count <- length(unlist(strsplit(text, "\\s+")))
char_count <- length(text)
print(char_count)



